import asyncio
import aiohttp
from config import settings

async def send_test_message():
    """Send a test message to the bot"""
    # Get bot info first
    url = f"https://api.telegram.org/bot{settings.telegram_bot_token}/getMe"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            
            if data.get("ok"):
                bot_info = data.get("result", {})
                print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.get('username')}")
                print(f"‚úÖ ID –±–æ—Ç–∞: {bot_info.get('id')}")
                print(f"‚úÖ –ò–º—è –±–æ—Ç–∞: {bot_info.get('first_name')}")
                
                # Check webhook status
                webhook_url = f"https://api.telegram.org/bot{settings.telegram_bot_token}/getWebhookInfo"
                async with session.get(webhook_url) as webhook_response:
                    webhook_data = await webhook_response.json()
                    
                    if webhook_data.get("ok"):
                        webhook_info = webhook_data.get("result", {})
                        print(f"‚úÖ Webhook URL: {webhook_info.get('url')}")
                        print(f"‚úÖ Pending updates: {webhook_info.get('pending_update_count', 0)}")
                        
                        if webhook_info.get('url'):
                            print("\nüéâ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
                            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /start –±–æ—Ç—É –≤ Telegram")
                        else:
                            print("‚ùå Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook: {webhook_data}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {data}")

if __name__ == "__main__":
    asyncio.run(send_test_message())
