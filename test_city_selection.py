#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤ —Å —ç–º–æ–¥–∑–∏ —Å—Ç—Ä–∞–Ω
"""
import asyncio
import logging
from weather_api import weather_api

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_city_search():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ —Å —ç–º–æ–¥–∑–∏ —Å—Ç—Ä–∞–Ω")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≥–æ—Ä–æ–¥–∞ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    test_cities = [
        "London",      # –õ–æ–Ω–¥–æ–Ω –≤ –ê–Ω–≥–ª–∏–∏, –ö–∞–Ω–∞–¥–µ, –°–®–ê
        "Paris",       # –ü–∞—Ä–∏–∂ –≤–æ –§—Ä–∞–Ω—Ü–∏–∏, –°–®–ê, –ö–∞–Ω–∞–¥–µ
        "Moscow",      # –ú–æ—Å–∫–≤–∞ –≤ –†–æ—Å—Å–∏–∏, –°–®–ê
        "Berlin",      # –ë–µ—Ä–ª–∏–Ω –≤ –ì–µ—Ä–º–∞–Ω–∏–∏, –°–®–ê
        "Springfield", # –ú–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–æ–≤ –≤ –°–®–ê
        "Cambridge",   # –ö–µ–º–±—Ä–∏–¥–∂ –≤ –ê–Ω–≥–ª–∏–∏, –°–®–ê, –ö–∞–Ω–∞–¥–µ
        "York",        # –ô–æ—Ä–∫ –≤ –ê–Ω–≥–ª–∏–∏, –°–®–ê, –ö–∞–Ω–∞–¥–µ
        "Manchester",  # –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –≤ –ê–Ω–≥–ª–∏–∏, –°–®–ê
        "Birmingham",  # –ë–∏—Ä–º–∏–Ω–≥–µ–º –≤ –ê–Ω–≥–ª–∏–∏, –°–®–ê
        "Newcastle"    # –ù—å—é–∫–∞—Å–ª –≤ –ê–Ω–≥–ª–∏–∏, –ê–≤—Å—Ç—Ä–∞–ª–∏–∏, –°–®–ê
    ]
    
    for city_name in test_cities:
        print(f"\nüèô –ü–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–∞: {city_name}")
        print("-" * 40)
        
        try:
            cities = await weather_api.search_cities(city_name, limit=5)
            
            if not cities:
                print(f"‚ùå –ì–æ—Ä–æ–¥ '{city_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(cities)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:")
            
            for i, city in enumerate(cities):
                print(f"   {i+1}. {city['country_emoji']} {city['readable_name']}")
                print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {city['lat']:.4f}, {city['lon']:.4f}")
                print(f"      –°—Ç—Ä–∞–Ω–∞: {city['country']}")
                if city.get('state'):
                    print(f"      –®—Ç–∞—Ç/–û–±–ª–∞—Å—Ç—å: {city['state']}")
                print()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ '{city_name}': {e}")
    
    print("\nüåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏ —Å—Ç—Ä–∞–Ω:")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
    test_countries = [
        "Russia", "United States", "United Kingdom", "Germany", "France",
        "Canada", "Australia", "Japan", "China", "India", "Brazil",
        "Ukraine", "Kazakhstan", "Belarus", "Poland", "Italy", "Spain"
    ]
    
    for country in test_countries:
        emoji = weather_api._get_country_emoji(country)
        print(f"   {emoji} {country}")


async def test_single_vs_multiple():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ vs –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞"""
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –≤—ã–±–æ—Ä–∞:")
    print("-" * 40)
    
    # –ì–æ—Ä–æ–¥–∞ —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    single_cities = ["Vladivostok", "Novosibirsk", "Yekaterinburg"]
    
    # –ì–æ—Ä–æ–¥–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    multiple_cities = ["London", "Paris", "Berlin"]
    
    print("–ì–æ—Ä–æ–¥–∞ —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º:")
    for city in single_cities:
        cities = await weather_api.search_cities(city, limit=5)
        print(f"   {city}: {len(cities)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç(–æ–≤)")
    
    print("\n–ì–æ—Ä–æ–¥–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏:")
    for city in multiple_cities:
        cities = await weather_api.search_cities(city, limit=5)
        print(f"   {city}: {len(cities)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç(–æ–≤)")


async def test_weather_for_selected_city():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    
    print(f"\nüå§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:")
    print("-" * 40)
    
    # –ù–∞–π—Ç–∏ –õ–æ–Ω–¥–æ–Ω –≤ –ê–Ω–≥–ª–∏–∏
    cities = await weather_api.search_cities("London", limit=5)
    
    if cities:
        # –í—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–æ–±—ã—á–Ω–æ —Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π)
        london = cities[0]
        print(f"–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥: {london['country_emoji']} {london['readable_name']}")
        
        # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É
        weather_data = await weather_api.get_weather_forecast(
            london["lat"], 
            london["lon"], 
            "ru"
        )
        
        if weather_data:
            print(f"‚úÖ –ü–æ–≥–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['current_temperature']}¬∞C")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {weather_data['description']}")
            print(f"   –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await test_city_search()
        await test_single_vs_multiple()
        await test_weather_for_selected_city()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        logger.error(f"Test error: {e}", exc_info=True)
    
    finally:
        # –ó–∞–∫—Ä—ã—Ç—å HTTP –∫–ª–∏–µ–Ω—Ç
        await weather_api.close()


if __name__ == "__main__":
    asyncio.run(main())
